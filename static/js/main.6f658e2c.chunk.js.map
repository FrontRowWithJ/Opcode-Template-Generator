{"version":3,"sources":["TemplateText.jsx","CodeTemplate.jsx","DownloadSVG.jsx","DownloadButton.jsx","TemplateButton.jsx","MoreButton.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["filterInput","event","setAction","key","value","target","undefined","preventDefault","length","setInput","node","index","action","max","parentElement","children","Math","min","focus","setCaretPosition","elem","caretPos","createTextRange","range","move","select","selectionStart","setSelectionRange","TemplateText","props","useState","className","minLength","maxLength","style","gridColumnStart","idx","gridColumnEnd","type","onKeyDown","onKeyUp","onFocus","CodeTemplate","numOfBits","onInput","setFilename","placeholder","ref","templateRef","gridTemplateColumns","bitLabels","map","bit","getStyle","Array","fill","val","DownloadSVG","version","xmlns","xmlnsXlink","viewBox","xmlSpace","d","download","image","filename","link","document","createElement","name","slice","href","click","DownloadButton","onClick","html2canvas","downloadRef","current","then","canvas","toDataURL","replace","start","end","from","_","i","OpcodeMiddle","l","left","r","right","Fragment","color","MicroCodeMiddle","TemplateButton","useRef","isButtonShowing","setButtonShowing","argLeft","templateNumber","argRight","buttons","numOfButtons","setButtonRenders","setPress","buttonName","TEMPLATE_NAMES","MoreButton","canDuplicate","setDuplicate","isMoreButton","setMoreButton","buttonRenders","opacity","canPress","setNumOfButtons","App","times","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f658e2c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./template-text.css\";\n\nconst NEXT = 0;\nconst PREV = 1;\nconst STAY = 2;\nconst TemplateText = (props) => {\n  const [action, setAction] = useState(undefined);\n  return (\n    <input\n      className=\"template-input\"\n      minLength={0}\n      maxLength={1}\n      style={{ gridColumnStart: props.idx + 1, gridColumnEnd: props.idx + 2 }}\n      type=\"text\"\n      onKeyDown={(event) => filterInput(event, setAction)}\n      onKeyUp={(event) =>\n        setInput(event.target, props.idx, action, setAction, props.max)\n      }\n      onFocus={(event) => setCaretPosition(event.target, 1)}\n    />\n  );\n};\n\nconst filterInput = (event, setAction) => {\n  const key = event.key;\n  const value = event.target.value;\n  if (\n    key !== \"0\" &&\n    key !== \"1\" &&\n    key !== \"Backspace\" &&\n    key !== \"Enter\" &&\n    key !== undefined &&\n    key !== \"ArrowLeft\" &&\n    key !== \"ArrowRight\"\n  )\n    event.preventDefault();\n\n  switch (key) {\n    case \"0\":\n    case \"1\":\n      if (value.length === 1) event.target.value = key;\n      setAction(NEXT);\n      break;\n    case \"ArrowRight\":\n      setAction(NEXT);\n      break;\n    case \"Backspace\":\n      if (value.length === 0) setAction(PREV);\n      break;\n    case \"ArrowLeft\":\n      setAction(PREV);\n      break;\n    default:\n  }\n};\n\nconst setInput = (node, index, action, setAction, max) => {\n  switch (action) {\n    case NEXT:\n      [...node.parentElement.children][Math.min(index + 1, max - 1)].focus();\n      setAction(STAY);\n      break;\n    case PREV:\n      [...node.parentElement.children][Math.max(0, index - 1)].focus();\n      setAction(STAY);\n      break;\n    default:\n  }\n};\n\nconst setCaretPosition = (elem, caretPos) => {\n  if (elem.createTextRange) {\n    const range = elem.createTextRange();\n    range.move(\"character\", caretPos);\n    range.select();\n  } else {\n    if (elem.selectionStart) {\n      elem.focus();\n      elem.setSelectionRange(caretPos, caretPos);\n    } else elem.focus();\n  }\n};\n\nexport default TemplateText;\n","import React from \"react\";\nimport TemplateText from \"./TemplateText\";\nimport \"./code-template.css\";\n\nconst CodeTemplate = (props) => {\n  const numOfBits = props.numOfBits;\n  return (\n    <div\n      className=\"outer\"\n      onInput={(event) => props.setFilename(event.target.value)}\n    >\n      <input className=\"template-label\" type=\"text\" placeholder=\"Label\" />\n      <div\n        ref={props.templateRef}\n        className=\"code-container\"\n      >\n        <div\n          className=\"code-template-top\"\n          style={{ gridTemplateColumns: `repeat(${numOfBits}, 1fr)` }}\n        >\n          {props.bitLabels.map((bit, key) => {\n            return (\n              <span\n                style={props.getStyle(numOfBits - bit, numOfBits + 1 - bit, \"\")}\n                key={key}\n              >\n                {bit}\n              </span>\n            );\n          })}\n        </div>\n        <div\n          className=\"code-template-middle\"\n          style={{ gridTemplateColumns: `repeat(${numOfBits}, 1fr)` }}\n        >\n          {props.children}\n        </div>\n        <div\n          className=\"code-template-bottom\"\n          style={{ gridTemplateColumns: `repeat(${numOfBits}, 1fr)` }}\n        >\n          {new Array(numOfBits).fill(0).map((val, index) => (\n            <TemplateText idx={index} key={index} max={numOfBits} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CodeTemplate;\n","import React from \"react\";\r\n\r\nconst DownloadSVG = (props) => (\r\n  <svg\r\n    className={props.className}\r\n    version=\"1.1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n    viewBox=\"0 0 512 512\"\r\n    xmlSpace=\"preserve\"\r\n  >\r\n    <path\r\n      d=\"M382.56,233.376C379.968,227.648,374.272,224,368,224h-64V16c0-8.832-7.168-16-16-16h-64c-8.832,0-16,7.168-16,16v208h-64\r\n\t\t\tc-6.272,0-11.968,3.68-14.56,9.376c-2.624,5.728-1.6,12.416,2.528,17.152l112,128c3.04,3.488,7.424,5.472,12.032,5.472\r\n\t\t\tc4.608,0,8.992-2.016,12.032-5.472l112-128C384.192,245.824,385.152,239.104,382.56,233.376z\"\r\n    />\r\n    <path d=\"M432,352v96H80v-96H16v128c0,17.696,14.336,32,32,32h416c17.696,0,32-14.304,32-32V352H432z\" />\r\n  </svg>\r\n);\r\n\r\nexport default DownloadSVG;\r\n","import React from \"react\";\nimport \"./download-button.css\";\nimport DownloadSVG from \"./DownloadSVG\";\nimport html2canvas from \"html2canvas\";\n\nconst DownloadButton = (props) => {\n  return (\n    <button\n      className=\"download-button\"\n      onClick={() => {\n        html2canvas(props.downloadRef.current).then((canvas) => {\n          const image = canvas\n            .toDataURL(\"image/png\")\n            .replace(\"image/png\", \"image/octet-stream\");\n          download(image, props.filename);\n        });\n      }}\n    >\n      <DownloadSVG className=\"download-svg\" />\n    </button>\n  );\n};\n\nconst download = (image, filename) => {\n  const link = document.createElement(\"a\");\n  const name = filename.slice(-4) === \".png\" ? filename : filename + \".png\";\n  link.download = name === \".png\" ? \"default.png\" : name;\n  link.href = image;\n  link.click();\n};\n\nexport default DownloadButton;\n","import React, { useState, useRef } from \"react\";\nimport \"./template-button.css\";\nimport CodeTemplate from \"./CodeTemplate\";\nimport DownloadButton from \"./DownloadButton\";\nconst range = (start, end) =>\n  Array.from({ length: end - start + 1 }, (_, i) => i + start);\n\nconst TemplateButton = (props) => {\n  const templateRef = useRef(null);\n  const [isButtonShowing, setButtonShowing] = useState(true);\n  const [filename, setFilename] = useState(\"\");\n  const argLeft =\n    props.templateNumber === 1 || props.templateNumber === 2 ? \"DR\" : \"AD Left\";\n  const argRight = [\"\", \"SB\", \"OP\", \"AD Right\"][props.templateNumber];\n  return isButtonShowing ? (\n    <button\n      className=\"template-button\"\n      onClick={() => {\n        setButtonShowing(false);\n        let buttons = new Array(props.numOfButtons).fill(false);\n        buttons[props.templateNumber] = true;\n        props.setButtonRenders(buttons);\n        props.setPress(true);\n      }}\n    >\n      {props.buttonName}\n    </button>\n  ) : (\n    <div className=\"template-container\">\n      {props.templateNumber === 0 ? (\n        <CodeTemplate\n          numOfBits={42}\n          bitLabels={[...range(0, 9), ...range(13, 22), 24, 25, 41]}\n          templateRef={templateRef}\n          getStyle={getStyle}\n          setFilename={setFilename}\n        >\n          <MicroCodeMiddle />\n        </CodeTemplate>\n      ) : (\n        <CodeTemplate\n          numOfBits={32}\n          bitLabels={[0, 4, 5, 9, 10, 14, 15, 31]}\n          templateRef={templateRef}\n          getStyle={getStyle}\n          setFilename={setFilename}\n        >\n          <OpcodeMiddle left={argLeft} right={argRight} />\n        </CodeTemplate>\n      )}\n      <DownloadButton downloadRef={templateRef} filename={filename} />\n    </div>\n  );\n};\n\nconst OpcodeMiddle = (props) => {\n  const l = props.left === \"DR\" ? \"blue\" : \"orange\";\n  const r = props.right === \"SB\" ? \"red\" : \"orange\";\n  return (\n    <React.Fragment>\n      <span style={getStyle(1, 18, \"green\")}>Opcode</span>\n      <span style={getStyle(18, 23, l)}>{props.left}</span>\n      <span style={getStyle(23, 28, \"red\")}>SA</span>\n      <span style={getStyle(28, 33, r)}>{props.right}</span>\n    </React.Fragment>\n  );\n};\n\nconst getStyle = (start, end, color) => {\n  return { gridColumnStart: start, gridColumnEnd: end, color: color };\n};\n\nconst MicroCodeMiddle = () => {\n  return (\n    <React.Fragment>\n      <span style={getStyle(1, 18, \"red\")}>NA</span>\n      <span style={getStyle(18, 21, \"red\")}>MS</span>\n      <span style={getStyle(21, 22, \"red\")}>MC</span>\n      <span style={getStyle(22, 23, \"red\")}>IL</span>\n      <span style={getStyle(23, 24, \"red\")}>PI</span>\n      <span style={getStyle(24, 25, \"red\")}>PL</span>\n      <span style={getStyle(25, 26, \"blue\")}>TD</span>\n      <span style={getStyle(26, 27, \"blue\")}>TA</span>\n      <span style={getStyle(27, 28, \"blue\")}>TB</span>\n      <span style={getStyle(28, 29, \"blue\")}>MB</span>\n      <span style={getStyle(29, 34, \"blue\")}>FS</span>\n      <span style={getStyle(34, 35, \"blue\")}>MD</span>\n      <span style={getStyle(35, 36, \"blue\")}>RW</span>\n      <span style={getStyle(36, 37, \"blue\")}>MM</span>\n      <span style={getStyle(37, 38, \"blue\")}>MW</span>\n      <span style={getStyle(38, 39, \"blue\")}>RV</span>\n      <span style={getStyle(39, 40, \"blue\")}>RC</span>\n      <span style={getStyle(40, 41, \"blue\")}>RN</span>\n      <span style={getStyle(41, 42, \"blue\")}>RZ</span>\n      <span style={getStyle(42, 43, \"blue\")}>FL</span>\n    </React.Fragment>\n  );\n};\n\nexport default TemplateButton;\n","import React, { useState } from \"react\";\nimport TemplateButton from \"./TemplateButton\";\nimport \"./more-button.css\";\nconst TEMPLATE_NAMES = [\n  \"Micro-code\",\n  \"Register\",\n  \"Immediate\",\n  \"Jump And Branch\",\n];\nconst MoreButton = (props) => {\n  const [canDuplicate, setDuplicate] = useState(true);\n  const [isMoreButton, setMoreButton] = useState(true);\n  const [buttonRenders, setButtonRenders] = useState(\n    new Array(TEMPLATE_NAMES.length).fill(true)\n  );\n  return (\n    <div className=\"more-button-container\">\n      {isMoreButton ? (\n        <button\n          style={{ opacity: props.canPress ? 1 : 0.3 }}\n          className=\"more-button\"\n          onClick={() => {\n            if (canDuplicate && props.canPress) {\n              setMoreButton(false);\n              props.setNumOfButtons(props.numOfButtons + 1);\n              setDuplicate(false);\n              props.setPress(false);\n            }\n          }}\n        ></button>\n      ) : (\n        TEMPLATE_NAMES.map((name, index) =>\n          buttonRenders[index] ? (\n            <TemplateButton\n              setPress={props.setPress}\n              buttonName={name}\n              key={index}\n              templateNumber={index}\n              setButtonRenders={setButtonRenders}\n              numOfButtons={TEMPLATE_NAMES.length}\n            />\n          ) : (\n            <React.Fragment key={index}></React.Fragment>\n          )\n        )\n      )}\n    </div>\n  );\n};\n\nexport default MoreButton;\n","import React, { useState } from \"react\";\nimport { times } from \"lodash\";\nimport MoreButton from \"./MoreButton\";\nimport \"./app.css\";\n\nconst App = () => {\n  const [numOfButtons, setNumOfButtons] = useState(1);\n  const [canPress, setPress] = useState(true);\n  return (\n    <main>\n    <h1>Micro-code/Opcode Template Generator</h1>\n      {times(numOfButtons, (idx) => (\n        <MoreButton\n          canPress={canPress}\n          setPress={setPress}\n          numOfButtons={numOfButtons}\n          setNumOfButtons={setNumOfButtons}\n          key={idx}\n        />\n      ))}\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}